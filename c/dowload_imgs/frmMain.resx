<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AADj7+//4+/v/+Pv7//i7u7/4+/v/+Lu7v/i7u7/4u7u/+Lu7v/i7u7/4+/w/+by8v/q9/j/7Pn6/+v4
        +f/s+fr/7Pn6/+v4+v/s+fv/6fX2/+Xx8v/j7+//4+/v/+Lu7v/i7u7/4u7u/+Pv7//j7+//4+/v/+Lu
        7v/i7u7/4u7u/+Lu7v/i7u7/4+/v/+Lu7v/j7+//4u7u/+Lu7v/i7u7/4u7u/+Pu7v/c5+b/1+Hg/8XN
        yP++xb//v8fB/7vDvP+7xL3/vsbA/7rCu//M1dL/2ePi/97q6P/i7u7/4u7u/+Lu7v/i7u7/4u7u/+Pv
        7//j7+//4u7u/+Lu7v/i7u7/4u7u/+Lu7v/j7+//4+/v/+Lu7v/i7u7/4u7u/+Pv7//f6+r/6PX2/6es
        pv9JRCr/ZGFM/1RRN/8tJQL/MisJ/zAoBv81Lg7/b25a/09LMf9bVj//ydLS/+r3+P/f6un/4u7u/+Lu
        7v/i7u7/4u7u/+Pv7//j7+//4+/v/+Pv7//i7u7/4+/v/+Lu7v/j7+//4u7u/+Lu7v/i7u7/4ezr/+v5
        /P/h7O3/n5+D/21qT//p9fj/2+fo/05GHv9TRQL/RjgA/3t6Zf//////sLav/1ZNHv+mpon/3uno/+v5
        /P/g7Ov/4u7u/+Lu7v/j7+//4u7u/+Lu7v/i7u7/4u7u/+Lu7v/i7u7/4u7u/+Pv7//j7+//4u7t/+Lu
        7f/s+v7/uLyr/2lfJv89LQD/goFs/+/9///w/f//lZaE/0g9BP9EOQX/sLav/+z5+v/O2Nf/S0IQ/0s8
        AP9jWSD/t7uq/+z6/v/i7e3/4u7u/+Pv7//j7+//4u7u/+Lu7v/i7u7/4+/v/+Lu7v/i7u7/4u7u/+Lu
        7f/i7u7/6fb6/5aUc/9MPgD/VEcE/0s+AP+JinX/lJeM/4KEc/+hppz/o6ig/8DJxf/p9vf/7/z+/+Ds
        7/9SSh//UUMA/1RHBP9LPgD/l5V0/+n2+v/j7+7/4u7u/+Pv7//i7u7/4+/v/+Pv7//i7u7/4u7u/+Lu
        7v/i7u7/4e3t/+r3+v+NiWT/SToA/1ZKB/9bTgr/Sz0A/2xpUv90cWH/aWRP/2llUv9wbVn/eXhm/4qM
        fP+prqT/uL+4/1xaPf9dWDL/TUAB/1lNB/9IOgD/jopm/+r3+//h7e3/4u7u/+Pv7//i7u7/4u7u/+Pv
        7//j7+//4+/v/+Ds6//t+v//nZ2A/0k6AP9YTAj/V0oF/0w+AP9MQxf/WFQ9/4eGd/9qb2H/eXNh/316
        af90cF//aWVS/2pmUv9ua1f/aWhU/7G5t/9kYUD/TkAA/1pJBf9JNwD/nJt9/+z6/v/g7Ov/4+/v/+Lu
        7v/i7u7/4+/v/+Pv7//g7Ov/6vf6/8LIu/9QQQH/VkkE/1dLCf9NQAD/Y19B/9rm6P/P2NX/X2FP/2Ny
        bv9YbGf/aGte/3VxXf90cWH/cm9e/3RxYP9lYE3/qrCp/6Ckl/9CMwD/UnZi/1JhOf9QPAD/v8W4/+r4
        +//g7Ov/4u7u/+Pv7//j7+//4u7u/+Lu7v/m8vT/cWg4/05DAP9WSwz/WUYB/0MzAP+tsqj/9////5GU
        h/9kX0r/ZXNu/2huY/9zcF7/dXBg/3JvX/94dGT/d3Vk/2NgTP/Q2df/lp2P/0FTMv9TbE7/VFQe/1A/
        AP9tZTX/5PDx/+Lu7v/i7u7/4+/v/+Pv7//h7Oz/6/n8/7a6qv9NOQD/U2dD/0t/eP9WWSf/RkEM/4+W
        i//x////aGZR/3FsWP9mcWf/c3Ji/3VxYP9zcF//dHFf/3NwYP9xblz/fXxr/9bd3P9aTib/UkAA/1VI
        B/9SURr/V00K/00+AP+ztqP/7Pr9/+Ds6//i7u7/4u7u/+Ht7P/q9/v/f3lQ/00+AP9WTRL/Ulgo/1Fk
        Q/9QaEr/RUEX/6usof/q9/n/u8S9/5ubjf+CgXH/dnRj/3RwXv91cV//e3dn/3VxYP+IiHz/bXps/0NQ
        J/9SaEn/TWlN/0x7b/9WSQn/Tj8A/3x3S//p9vr/4e3s/+Lu7v/i7u3/5fHy/9nj4P9eTxL/U0MA/1Fo
        Rv9QYj3/UVsw/1FgO/9QXTT/Q0QZ/3h3Yf+qr6f/3uvr/+Pw8P/L1dH/sLau/5OVif9/fWz/ZmJO/z0z
        B/9OSxX/VFkr/1NLE/9SVyj/UGE5/1FgOP9TRQT/XU0P/9fh3f/m8vP/4u7t/+Ht7P/q9/v/wsW1/05O
        Fv9OeGj/U08Z/1RKEf9RXDL/UlYo/1BrT/9FTin/cm9X/7e/uf/e6ej/4+/w/+f09f/s+fv/6/j5/97q
        6f+4wLv/ZmFC/0pGFP9WVSL/UV88/1BlRf9RWSv/UlQh/055af9NTxn/v8Kx/+r4+//h7Oz/4Ozr/+v6
        //+wrpT/SVEh/1FuVf9RYDj/Tm9Y/1FYLv9SaUn/Qkok/5uelP/4////7fn5/+Pv7//h7e3/4u7t/+Dr
        6//g6+v/4+/v//D9/P/n8/X/Z29d/0ZbOv9SZEL/VUQG/1BoTP9RXzf/UWtO/0hSIP+urJH/7Pr//+Dr
        6v/g6+r/7fr//6epjv9MOQD/WEIB/09vV/9SWC3/U2A6/0lVKv9pbFT/7fn6/9bk7P/Z5uz/4e3r/+j0
        9f/i7u7/5vLz/+Tx8f/g6+v/0uDq/+f1+v/Fy8X/REkl/1JfNf9QY0P/Ulcr/05xW/9YQgT/TDgA/6an
        jP/s+v//4Ozr/+Dr6v/s+///qqaI/0dZMf9PeWn/Ulkr/09oTf9Sb1T/QEca/56hk//n9f//l6zt/6q+
        9P/y////wcnF/5OXiv+an5P/3+rm/97t//+TqvP/s8Xw/+jz8f9gYEX/TFct/09uVv9PaEz/Ulst/1B6
        a/9GWzT/qaSG/+z7///g6+r/4Ozr/+v5/v+2tqH/Sk4Y/1JfMv9UTRP/TmpO/1JrT/9BUTD/rbCm/+v4
        +v/G1fL/uMXY/7O5r//V397/3uno/9fj4f/Q2tb/qrCr/7/P8P/Q3u7/6/X1/21zX/9JUSX/VlQh/1Bt
        U/9UTBD/U1wu/0pOGf+1taD/6/n9/+Ds6//h7ez/6PX3/8vSyf9WQwH/VUgH/1BlQf9QYj//VWVB/0Q/
        Df+gp57/7/z9/+z59f+yuKv/WVU9/+z4+v/h7e3/7fr7/8PMxv9TTzX/4+3o/+Xx7f/o8/X/YWRI/0hk
        SP9UVyr/VFEb/09pSv9VSQf/VUMA/8rRyP/o9ff/4e3s/+Lu7f/j7+//4e3t/2haIP9Id2n/UWRE/1Ja
        MP9TY0H/R1w6/2JiTf/g7PD/7Pn9/+fz9P/i7u3/4u7t/+Ht7P/h7ez/4+/t/+Pv7v/p9vj/7/3//7e9
        u/9DRCD/UWlL/01uXf9TVCX/UGNB/0h4a/9nWiD/4Ozs/+Pv8P/i7u7/4u7u/+Ds6//t+///kY5s/0pA
        AP9UWir/UGRB/1FpSv9ORhT/cGon/3p6Tf+nrJ//y9TV/97q7f/k8PX/5vP4/+fz+P/i7/P/2eXo/7/H
        xP+UloD/enc9/2JYGv9PRA3/UWZE/1BjQ/9UWy7/SkAA/5CNav/t+v//4Ozr/+Pv7//i7u7/4e3s/+j1
        +P/J0sr/VEAA/1JcLf9RXjj/TH1z/1NNGf96dzf/dHAu/2lkJP90cTj/enlL/4WFYP+Kimj/h4ln/4OE
        XP91c0P/cG0w/2tmJf95djb/bmgr/01FDP9OgHb/Ulsz/1JfNP9TPgD/yNDI/+n2+P/i7e3/4u7u/+Pv
        7//j7+//4Ozr/+z6//+Jf1T/Q2dP/1FwVv9UViD/QjsL/2xoL/97eDb/bGcv/2FcJv90cCz/aGMk/21o
        Jv9xbSj/ZmIk/25pK/9sZy7/ZV8r/4qGP/9QSR3/S0EI/1VXIf9RbVD/Q2pV/4Z9Uv/s+v//4e3s/+Pv
        7//j7+//4+/v/+Pv7//i7e3/5vP0/9jg2/9bXS3/UU0N/0s5AP96dzP/hoQ+/19bKf+MiT//aGQs/3d0
        NP9pZSz/Y18q/3ZyNP9bVib/gX44/2plLP+Ggj3/W1Yn/5iYSf9hWiD/UD4A/1FNDv9aXS3/19/a/+bz
        9P/i7u7/4+/v/+Pv7//j7+//4u7u/+Pv7//h7Ov/6/j8/8HCsf9PPwD/WFMi/317Ov9VTBP/QzgC/1tW
        JP+Afjr/dnM1/4SCOv92czL/gX45/3ZzNP97dzb/d3Q3/01EE/9IPAP/YVoe/3t4PP9NRhX/UUIA/76/
        rf/r+f3/4ezr/+Pv7//i7u7/4+/v/+Pv7//j7+//4u7u/+Pv7//g7Ov/7Pr9/3h5Z/9DOQn/RzoA/1hL
        Bf9JPQP/lJJC/5OSRP8/NQf/TUUU/4yLQP95dzX/QjgG/09GFv+urlP/a2Yn/09BAP9TRgT/Sz4C/zsx
        Af+SlIP/8P///9/r6v/j7+//4u7u/+Pv7//j7+//4+/v/+Pv7//j7+//4u7u/+Pv7//g6+r/3+vs/7/D
        s/9jVxv/SToA/1VMFP+bm03/VEoX/1VHAP9NQwv/qahP/4aDOv9MPwH/TkIB/2xnLP+MikL/STwC/05A
        AP9gVRj/u7+t/+Tw8//h7ez/4+/v/+Pv7//i7u7/4+/v/+Lu7v/j7+//4+/v/+Pv7//j7+//4+/v/+Pv
        7//k8O//6/n8/9vl4v+IhGD/WVMb/1BIEP9HOQD/WEwC/0c8Av+KiD//bWco/01AAP9YTAL/RTgA/1dR
        Gv9UShT/i4df/9ji3//s+f3/4u7t/+Pv7//j7+//4+/v/+Pv7//j7+//4+/v/+Lu7v/j7+//4u7u/+Pv
        7//j7+//4+/v/+Lu7v/f6+r/6/j6/9Xg4P9lY0//lpV4/3BoMf9bUA7/SjsA/2VgJv9UTBL/TkAA/1pO
        Df90bTb/fntg/3V0Y//x/v//5fLz/+Ds6//j7+//4+/v/+Lu7v/j7+//4+/v/+Pv7//j7+//4+/v/+Pv
        7//j7+//4+/v/+Pv7//j7+//4u7u/+Lu7v/k8PD/2OLg/9fi4P/x////5PDy/9Lb1v/P1sv/Z2VM/5CR
        fP/O1cr/09zX/+Xx8//u+/3/0tza/+Ds6//i7u3/4+/v/+Pv7//i7u7/4+/v/+Pv7//j7+//4+/v/+Pv
        7//j7+//4+/v/+Pv7//j7+//4+/v/+Pv7//i7u7/4u7u/+Pv7v/k8fH/5fLy/9/r6v/i7u7/5PHy/+/9
        ///H0M3/2eTk/+37/v/l8vP/4u7u/+Ds6//m8/P/4+/v/+Pu7//j7+//4+/v/+Pv7//i7u7/4+/v/+Pv
        7//j7+//4+/v/+Pv7//j7+//4+/v/+Pv7//j7+//4u7u/+Pv7//j7+//4+/v/+Lu7v/i7u7/4+/v/+Lu
        7v/i7u3/4Ovq/+j09P/k8PD/4Ozr/+Lu7v/i7u7/4+/v/+Lt7f/j7+//4u7u/+Pv7//j7+//4u7u/+Lu
        7v/j7+//4u7u/+Pv7//i7u7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>